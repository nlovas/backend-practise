{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Header from \"../../components/Header\";\nimport { withRouter } from \"next/router\";\nimport Head from \"next/head\";\n\nvar User = /*#__PURE__*/function (_React$Component) {\n  _inherits(User, _React$Component);\n\n  var _super = _createSuper(User);\n\n  function User(props) {\n    _classCallCheck(this, User);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(User, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Head, null, /*#__PURE__*/React.createElement(\"title\", null, \"User Page\")), /*#__PURE__*/React.createElement(Header, null), \"this is a user page woohoo\", /*#__PURE__*/React.createElement(\"br\", null), this.props.username, \" is the user's name\");\n    }\n  }]);\n\n  return User;\n}(React.Component);\n/*\r\nPrerendering static page... We need data to populate the page.\r\nRetrieve user profile data from the api\r\n*/\n\n/*export async function getStaticProps({ params }) {\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:8080/user/\" + params.userid,\r\n    }).then(\r\n      (response) => {\r\n        console.log(response);\r\n        var props = {\r\n          props: {\r\n            username: \"hardcoded\",\r\n          },\r\n        };\r\n        resolve(props);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        var props = {\r\n          props: {\r\n            username: \"errorhardcoded\",\r\n          },\r\n        };\r\n        resolve(props);\r\n      }\r\n    );\r\n  });\r\n}*/\n\n/*\r\nCalled on every request\r\nCalls the api to get what we need to populate the page\r\n*/\n\n\n/*\r\nexport async function getStaticPaths() {\r\n  //test example\r\n  var paths = [\r\n    {\r\n      params: {\r\n        userid: \"niwwi\",\r\n      },\r\n    },\r\n    {\r\n      params: {\r\n        userid: \"nlovas\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  return {\r\n    paths,\r\n    fallback: false,\r\n  };\r\n}*/\nexport var __N_SSP = true;\nexport default User;","map":{"version":3,"sources":["C:/Users/User/Documents/backend-practise/frontend/pages/user/[userid].js"],"names":["React","Header","withRouter","Head","User","props","username","Component"],"mappings":";;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;6BAEQ;AACP,0BACE,8CACE,oBAAC,IAAD,qBACE,+CADF,CADF,eAIE,oBAAC,MAAD,OAJF,6CAME,+BANF,EAOG,KAAKA,KAAL,CAAWC,QAPd,wBADF;AAWD;;;;EAjBgBN,KAAK,CAACO,S;AAoBzB;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;;;;;;AA+BA;;;;;;;;;;;;;;;;;;;;;;AAsBA,eAAeH,IAAf","sourcesContent":["import * as React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport { withRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\nimport Head from \"next/head\";\r\n\r\nclass User extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Head>\r\n          <title>User Page</title>\r\n        </Head>\r\n        <Header />\r\n        this is a user page woohoo\r\n        <br />\r\n        {this.props.username} is the user's name\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nPrerendering static page... We need data to populate the page.\r\nRetrieve user profile data from the api\r\n*/\r\n/*export async function getStaticProps({ params }) {\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:8080/user/\" + params.userid,\r\n    }).then(\r\n      (response) => {\r\n        console.log(response);\r\n        var props = {\r\n          props: {\r\n            username: \"hardcoded\",\r\n          },\r\n        };\r\n        resolve(props);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        var props = {\r\n          props: {\r\n            username: \"errorhardcoded\",\r\n          },\r\n        };\r\n        resolve(props);\r\n      }\r\n    );\r\n  });\r\n}*/\r\n\r\n/*\r\nCalled on every request\r\nCalls the api to get what we need to populate the page\r\n*/\r\nexport async function getServerSideProps(context) {\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:8080/user/\" + context.params,\r\n    }).then(\r\n      (response) => {\r\n        console.log(response);\r\n        var props = {\r\n          props: {\r\n            username: \"hardcodedusername\",\r\n          },\r\n        };\r\n        resolve(props);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        var props = {\r\n          props: {\r\n            username: \"errorhardcoded\",\r\n          },\r\n        };\r\n        resolve(props);\r\n      }\r\n    );\r\n  });\r\n}\r\n/*\r\nexport async function getStaticPaths() {\r\n  //test example\r\n  var paths = [\r\n    {\r\n      params: {\r\n        userid: \"niwwi\",\r\n      },\r\n    },\r\n    {\r\n      params: {\r\n        userid: \"nlovas\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  return {\r\n    paths,\r\n    fallback: false,\r\n  };\r\n}*/\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}