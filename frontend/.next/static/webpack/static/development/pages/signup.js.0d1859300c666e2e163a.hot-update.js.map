{"version":3,"file":"static/webpack/static\\development\\pages\\signup.js.0d1859300c666e2e163a.hot-update.js","sources":["webpack:///./pages/signup.js"],"sourcesContent":["import Header from \"../components/Header\";\r\n\r\nimport { Formik, Field, Form, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\n\r\nclass Signup extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // this.state = { usernamevalue: \"\", pwvalue: \"\", emailvalue: \"\" };\r\n\r\n    /*this.usernameChange = this.usernameChange.bind(this);\r\n    this.pwChange = this.pwChange.bind(this);\r\n    this.emailChange = this.emailChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);*/\r\n  }\r\n\r\n  /* usernameChange(event) {\r\n    this.setState({ usernamevalue: event.target.value });\r\n  }\r\n\r\n  pwChange(event) {\r\n    this.setState({ pwvalue: event.target.value });\r\n  }\r\n\r\n  emailChange(event) {\r\n    this.setState({ emailvalue: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    alert(\"successfully submitted\" + this.state.value);\r\n    event.preventDefault();\r\n  }*/\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <div>\r\n          <div>Sign up</div>\r\n          <Formik\r\n            initialValues={{\r\n              username: \"\",\r\n              password: \"\",\r\n              confirmPassword: \"\",\r\n              email: \"\"\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              username: Yup.string()\r\n                .required(\"Required\")\r\n                .min(3, \"Username must be at least 3 characters long\")\r\n                .max(20, \"Username is too long\")\r\n                .matches(\r\n                  /^[A-Za-z0-9\\-\\_.]*$/,\r\n                  \"Username can only use letters, numbers, or special characters(-_.)\"\r\n                ),\r\n              /*  .matches(\r\n                  /^[^\\u{203C}\\u{2049}\\u{20E3}\\u{2122}\\u{2139}\\u{2194}-\\u{2199}\\u{21A9}-\\u{21AA}\\u{231A}-\\u{231B}\\u{23E9}-\\u{23EC}\\u{23F0}\\u{23F3}\\u{24C2}\\u{25AA}-\\u{25AB}\\u{25B6}\\u{25C0}\\u{25FB}-\\u{25FE}\\u{2600}-\\u{2601}\\u{260E}\\u{2611}\\u{2614}-\\u{2615}\\u{261D}\\u{263A}\\u{2648}-\\u{2653}\\u{2660}\\u{2663}\\u{2665}-\\u{2666}\\u{2668}\\u{267B}\\u{267F}\\u{2693}\\u{26A0}-\\u{26A1}\\u{26AA}-\\u{26AB}\\u{26BD}-\\u{26BE}\\u{26C4}-\\u{26C5}\\u{26CE}\\u{26D4}\\u{26EA}\\u{26F2}-\\u{26F3}\\u{26F5}\\u{26FA}\\u{26FD}\\u{2702}\\u{2705}\\u{2708}-\\u{270C}\\u{270F}\\u{2712}\\u{2714}\\u{2716}\\u{2728}\\u{2733}-\\u{2734}\\u{2744}\\u{2747}\\u{274C}\\u{274E}\\u{2753}-\\u{2755}\\u{2757}\\u{2764}\\u{2795}-\\u{2797}\\u{27A1}\\u{27B0}\\u{2934}-\\u{2935}\\u{2B05}-\\u{2B07}\\u{2B1B}-\\u{2B1C}\\u{2B50}\\u{2B55}\\u{3030}\\u{303D}\\u{3297}\\u{3299}\\u{1F004}\\u{1F0CF}\\u{1F170}-\\u{1F171}\\u{1F17E}-\\u{1F17F}\\u{1F18E}\\u{1F191}-\\u{1F19A}\\u{1F1E7}-\\u{1F1EC}\\u{1F1EE}-\\u{1F1F0}\\u{1F1F3}\\u{1F1F5}\\u{1F1F7}-\\u{1F1FA}\\u{1F201}-\\u{1F202}\\u{1F21A}\\u{1F22F}\\u{1F232}-\\u{1F23A}\\u{1F250}-\\u{1F251}\\u{1F300}-\\u{1F320}\\u{1F330}-\\u{1F335}\\u{1F337}-\\u{1F37C}\\u{1F380}-\\u{1F393}\\u{1F3A0}-\\u{1F3C4}\\u{1F3C6}-\\u{1F3CA}\\u{1F3E0}-\\u{1F3F0}\\u{1F400}-\\u{1F43E}\\u{1F440}\\u{1F442}-\\u{1F4F7}\\u{1F4F9}-\\u{1F4FC}\\u{1F500}-\\u{1F507}\\u{1F509}-\\u{1F53D}\\u{1F550}-\\u{1F567}\\u{1F5FB}-\\u{1F640}\\u{1F645}-\\u{1F64F}\\u{1F680}-\\u{1F68A}]*$/,\r\n                  \"Username can only use letters, numbers, or special characters(-_.)\"\r\n                )*/ password: Yup.string()\r\n                .required(\"Required\")\r\n                .min(6, \"Password must be at least 6 characters long\")\r\n                .max(20, \"Password is too long\")\r\n                .matches(\r\n                  /(?=(.*[0-9]))(?=.*[\\!@#$%^&*\\-_.])(?=.*[a-z])(?=(.*[A-Z]))(?=(.*))^[A-Za-z0-9\\-\\_.]*$/,\r\n                  \"Password must contain: one or more lowercase letters, uppercase letters, a number, and a symbol(!@#$%^&*-_.) with no spaces or unicode characters\"\r\n                ),\r\n              //no emojis https://stackoverflow.com/a/50932501 Answered by SO user clickbait (https://stackoverflow.com/users/4356188/clickbait)\r\n              /*.matches(\r\n                  /^[^\\u{203C}\\u{2049}\\u{20E3}\\u{2122}\\u{2139}\\u{2194}-\\u{2199}\\u{21A9}-\\u{21AA}\\u{231A}-\\u{231B}\\u{23E9}-\\u{23EC}\\u{23F0}\\u{23F3}\\u{24C2}\\u{25AA}-\\u{25AB}\\u{25B6}\\u{25C0}\\u{25FB}-\\u{25FE}\\u{2600}-\\u{2601}\\u{260E}\\u{2611}\\u{2614}-\\u{2615}\\u{261D}\\u{263A}\\u{2648}-\\u{2653}\\u{2660}\\u{2663}\\u{2665}-\\u{2666}\\u{2668}\\u{267B}\\u{267F}\\u{2693}\\u{26A0}-\\u{26A1}\\u{26AA}-\\u{26AB}\\u{26BD}-\\u{26BE}\\u{26C4}-\\u{26C5}\\u{26CE}\\u{26D4}\\u{26EA}\\u{26F2}-\\u{26F3}\\u{26F5}\\u{26FA}\\u{26FD}\\u{2702}\\u{2705}\\u{2708}-\\u{270C}\\u{270F}\\u{2712}\\u{2714}\\u{2716}\\u{2728}\\u{2733}-\\u{2734}\\u{2744}\\u{2747}\\u{274C}\\u{274E}\\u{2753}-\\u{2755}\\u{2757}\\u{2764}\\u{2795}-\\u{2797}\\u{27A1}\\u{27B0}\\u{2934}-\\u{2935}\\u{2B05}-\\u{2B07}\\u{2B1B}-\\u{2B1C}\\u{2B50}\\u{2B55}\\u{3030}\\u{303D}\\u{3297}\\u{3299}\\u{1F004}\\u{1F0CF}\\u{1F170}-\\u{1F171}\\u{1F17E}-\\u{1F17F}\\u{1F18E}\\u{1F191}-\\u{1F19A}\\u{1F1E7}-\\u{1F1EC}\\u{1F1EE}-\\u{1F1F0}\\u{1F1F3}\\u{1F1F5}\\u{1F1F7}-\\u{1F1FA}\\u{1F201}-\\u{1F202}\\u{1F21A}\\u{1F22F}\\u{1F232}-\\u{1F23A}\\u{1F250}-\\u{1F251}\\u{1F300}-\\u{1F320}\\u{1F330}-\\u{1F335}\\u{1F337}-\\u{1F37C}\\u{1F380}-\\u{1F393}\\u{1F3A0}-\\u{1F3C4}\\u{1F3C6}-\\u{1F3CA}\\u{1F3E0}-\\u{1F3F0}\\u{1F400}-\\u{1F43E}\\u{1F440}\\u{1F442}-\\u{1F4F7}\\u{1F4F9}-\\u{1F4FC}\\u{1F500}-\\u{1F507}\\u{1F509}-\\u{1F53D}\\u{1F550}-\\u{1F567}\\u{1F5FB}-\\u{1F640}\\u{1F645}-\\u{1F64F}\\u{1F680}-\\u{1F68A}]*$/,\r\n                  \"Password must contain: one or more lowercase letters, uppercase letters, a number, and a symbol(!@#$%^&*-_.) with no spaces or unicode characters\"\r\n                )*/ /*\r\n(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*\\-\\_])\r\n(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9])(?=.*[!@#$%^&*\\-\\_])\\w+ from regexer\r\n\r\npassword\r\nPASSWORD\r\n123456\r\n@@!!!@@@--@!\r\npass!!!!!!\r\npassword1234\r\nPASS---WORD\r\n123456***\r\nPASSWORD12345\r\npassWORD\r\nPASSword12\r\npassWORD!!\r\nPASSW123RD!\r\npassword123!\r\nshould pass:\r\npassWORD123!\r\npASSw@rd222\r\n\r\n                  Passwords to test:\r\n                  password\r\n                  PASSWORD\r\n                  123456\r\n                  @@!!!@@@--@!\r\n\r\n                  pass!!!!!!\r\n                  password1234\r\n                  PASS---WORD\r\n                  123456***\r\n                  PASSWORD12345\r\n                  passWORD\r\n\r\n                  PASSword12\r\n                  passWORD!!\r\n                  PASSW123RD!\r\n                  password123!\r\n\r\n                  should pass:\r\n                  passWORD123!\r\n\r\n                https://regexr.com/\r\n                https://stackoverflow.com/questions/5887678/alphanumeric-dash-and-underscore-but-no-spaces-regular-expression-check-javascr\r\n                https://www.thepolyglotdeveloper.com/2015/05/use-regex-to-test-password-strength-in-javascript/\r\n                */\r\n              confirmPassword: Yup.string()\r\n                .required(\"Required\")\r\n                .oneOf([Yup.ref(\"password\"), null], \"Passwords do not match\"),\r\n              email: Yup.string()\r\n                .required(\"Required\")\r\n                .email(\"Must be a valid email\")\r\n            })}\r\n            onSubmit={fields => {\r\n              alert(\"SUCCESS!! :-)\\n\\n\" + JSON.stringify(fields, null, 4));\r\n            }}\r\n            render={({ errors, status, touched }) => (\r\n              <Form>\r\n                <label>First, choose a unique username</label>\r\n                <Field\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.username && touched.username ? \" is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"username\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n                <label>Enter a password (must contain min. 6 characters)</label>\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.password && touched.password ? \" is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"password\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n\r\n                <label>Please confirm your password</label>\r\n                <Field\r\n                  name=\"confirmPassword\"\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.confirmPassword && touched.confirmPassword\r\n                      ? \" is-invalid\"\r\n                      : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"confirmPassword\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n                <label>Enter your email</label>\r\n                <Field\r\n                  name=\"email\"\r\n                  type=\"text\"\r\n                  className={\r\n                    \"form-control\" +\r\n                    (errors.email && touched.email ? \" is-invalid\" : \"\")\r\n                  }\r\n                />\r\n                <ErrorMessage\r\n                  name=\"email\"\r\n                  component=\"div\"\r\n                  className=\"invalid-feedback\"\r\n                />\r\n                <button type=\"submit\">Register</button>\r\n              </Form>\r\n            )}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAGA;;;;AAIA;AAEA;;;;;;;;;;;;;;;;;AAiBA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAOA;;;;AAGA;AAQA;AACA;AAAA;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CA;AAGA;AA1EA;AA8EA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7DA;AAxFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4JA;;;;AA9LA;AACA;AAgMA;;;;A","sourceRoot":""}