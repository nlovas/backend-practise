{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Header from \"../components/Header\";\nimport * as React from \"react\";\nvar api = \"http://localhost:8080\";\n\nvar Login = /*#__PURE__*/function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    _classCallCheck(this, Login);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Header, null), /*#__PURE__*/React.createElement(\"h1\", null, \"Log In\"), /*#__PURE__*/React.createElement(\"div\", null, \"Not a member of the Island?\", /*#__PURE__*/React.createElement(Link, {\n        href: \"/signup\"\n      }, /*#__PURE__*/React.createElement(\"a\", null, \"Sign up\"))), /*#__PURE__*/React.createElement(Formik, {\n        initialValues: {\n          username: \"\",\n          password: \"\"\n        },\n        validationSchema: Yup.object().shape({\n          username: Yup.string().required(\"Required\"),\n          password: Yup.string().required(\"Required\")\n        }),\n        onSubmit: function _callee(fields, actions) {\n          return _regeneratorRuntime.async(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _this.submitForm(fields, actions);\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, null, null, null, Promise);\n        }\n      }, function (props) {\n        return /*#__PURE__*/React.createElement(Form, null, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"username\"\n        }, \"Username\"), /*#__PURE__*/React.createElement(Field, {\n          name: \"username\",\n          type: \"text\",\n          placeholder: \"Username\"\n        }), /*#__PURE__*/React.createElement(ErrorMessage, {\n          name: \"username\",\n          component: \"div\"\n        }), /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"password\"\n        }, \"Password\"), /*#__PURE__*/React.createElement(Field, {\n          name: \"password\",\n          type: \"text\",\n          placeholder: \"Password\"\n        }), /*#__PURE__*/React.createElement(ErrorMessage, {\n          name: \"password\",\n          component: \"div\"\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"submit\"\n        }, \"Log In\"));\n      }));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport default Login;","map":{"version":3,"sources":["C:/Users/User/Documents/backend-practise/frontend/pages/login.js"],"names":["Header","React","api","Login","props","username","password","Yup","object","shape","string","required","fields","actions","submitForm","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,IAAMC,GAAG,GAAG,uBAAZ;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;6BAEQ;AAAA;;AACP,0BACE,8CACE,oBAAC,MAAD,OADF,eAEE,yCAFF,eAGE,6EAEE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX,sBACE,yCADF,CAFF,CAHF,eASE,oBAAC,MAAD;AACE,QAAA,aAAa,EAAE;AACbC,UAAAA,QAAQ,EAAE,EADG;AAEbC,UAAAA,QAAQ,EAAE;AAFG,SADjB;AAKE,QAAA,gBAAgB,EAAEC,GAAG,CAACC,MAAJ,GAAaC,KAAb,CAAmB;AACnCJ,UAAAA,QAAQ,EAAEE,GAAG,CAACG,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CADyB;AAEnCL,UAAAA,QAAQ,EAAEC,GAAG,CAACG,MAAJ,GAAaC,QAAb,CAAsB,UAAtB;AAFyB,SAAnB,CALpB;AASE,QAAA,QAAQ,EAAE,iBAAOC,MAAP,EAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AACR,kBAAA,KAAI,CAACC,UAAL,CAAgBF,MAAhB,EAAwBC,OAAxB;;AADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATZ,SAaG,UAACT,KAAD;AAAA,4BACC,oBAAC,IAAD,qBACE;AAAO,UAAA,OAAO,EAAC;AAAf,sBADF,eAEE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,MAA5B;AAAmC,UAAA,WAAW,EAAC;AAA/C,UAFF,eAGE,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAC;AAAxC,UAHF,eAIE;AAAO,UAAA,OAAO,EAAC;AAAf,sBAJF,eAKE,oBAAC,KAAD;AAAO,UAAA,IAAI,EAAC,UAAZ;AAAuB,UAAA,IAAI,EAAC,MAA5B;AAAmC,UAAA,WAAW,EAAC;AAA/C,UALF,eAME,oBAAC,YAAD;AAAc,UAAA,IAAI,EAAC,UAAnB;AAA8B,UAAA,SAAS,EAAC;AAAxC,UANF,eAOE;AAAQ,UAAA,IAAI,EAAC;AAAb,oBAPF,CADD;AAAA,OAbH,CATF,CADF;AAqCD;;;;EA3CiBH,KAAK,CAACc,S;;AA8C1B,eAAeZ,KAAf","sourcesContent":["import Header from \"../components/Header\";\r\nimport * as React from \"react\";\r\n\r\nconst api = \"http://localhost:8080\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        <h1>Log In</h1>\r\n        <div>\r\n          Not a member of the Island?\r\n          <Link href=\"/signup\">\r\n            <a>Sign up</a>\r\n          </Link>\r\n        </div>\r\n        <Formik\r\n          initialValues={{\r\n            username: \"\",\r\n            password: \"\",\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            username: Yup.string().required(\"Required\"),\r\n            password: Yup.string().required(\"Required\"),\r\n          })}\r\n          onSubmit={async (fields, actions) => {\r\n            this.submitForm(fields, actions);\r\n          }}\r\n        >\r\n          {(props) => (\r\n            <Form>\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Field name=\"username\" type=\"text\" placeholder=\"Username\" />\r\n              <ErrorMessage name=\"username\" component=\"div\" />\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Field name=\"password\" type=\"text\" placeholder=\"Password\" />\r\n              <ErrorMessage name=\"password\" component=\"div\" />\r\n              <button type=\"submit\">Log In</button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}