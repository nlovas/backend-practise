{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Header from \"../../components/Header\";\nimport { withRouter } from \"next/router\";\nimport axios from \"axios\";\n\nvar User = /*#__PURE__*/function (_React$Component) {\n  _inherits(User, _React$Component);\n\n  var _super = _createSuper(User);\n\n  function User(props) {\n    _classCallCheck(this, User);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(User, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Header, null), \"this is a user page woohoo\", props.username, \" is the user's name\");\n    }\n  }]);\n\n  return User;\n}(React.Component);\n/*\r\nPrerendering static page... We need data to populate the page.\r\nRetrieve user profile data from the api\r\n*/\n\n\nexport function getStaticProps(_ref) {\n  var params;\n  return _regeneratorRuntime.async(function getStaticProps$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          params = _ref.params;\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            axios({\n              method: \"get\",\n              url: \"http://localhost:8080/user/\" + params.userid\n            }).then(function (response) {\n              console.log(response);\n              var props = {\n                props: response\n              };\n              resolve(props);\n            }, function (error) {\n              console.log(error);\n              var props = {\n                props: error\n              };\n              resolve(props);\n            });\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getStaticPaths() {\n  var paths;\n  return _regeneratorRuntime.async(function getStaticPaths$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          //test example\n          paths = [{\n            params: {\n              userid: \"niwwi\"\n            }\n          }, {\n            params: {\n              userid: \"nlovas\"\n            }\n          }];\n          return _context2.abrupt(\"return\", {\n            paths: paths,\n            fallback: false\n          });\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport default User;","map":{"version":3,"sources":["C:/Users/User/Documents/backend-practise/frontend/pages/user/[userid].js"],"names":["React","Header","withRouter","axios","User","props","username","Component","getStaticProps","params","Promise","resolve","reject","method","url","userid","then","response","console","log","error","getStaticPaths","paths","fallback"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,I;;;;;AACJ,gBAAYC,KAAZ,EAAmB;AAAA;;AAAA,6BACXA,KADW;AAElB;;;;6BAEQ;AACP,0BACE,8CACE,oBAAC,MAAD,OADF,gCAGGA,KAAK,CAACC,QAHT,wBADF;AAOD;;;;EAbgBN,KAAK,CAACO,S;AAgBzB;;;;;;AAIA,OAAO,SAAeC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgCC,UAAAA,MAAhC,QAAgCA,MAAhC;AAAA,2CACE,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCT,YAAAA,KAAK,CAAC;AACJU,cAAAA,MAAM,EAAE,KADJ;AAEJC,cAAAA,GAAG,EAAE,gCAAgCL,MAAM,CAACM;AAFxC,aAAD,CAAL,CAGGC,IAHH,CAIE,UAACC,QAAD,EAAc;AACZC,cAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,kBAAIZ,KAAK,GAAG;AAAEA,gBAAAA,KAAK,EAAEY;AAAT,eAAZ;AACAN,cAAAA,OAAO,CAACN,KAAD,CAAP;AACD,aARH,EASE,UAACe,KAAD,EAAW;AACTF,cAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACA,kBAAIf,KAAK,GAAG;AAAEA,gBAAAA,KAAK,EAAEe;AAAT,eAAZ;AACAT,cAAAA,OAAO,CAACN,KAAD,CAAP;AACD,aAbH;AAeD,WAhBM,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoBP,OAAO,SAAegB,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACL;AACIC,UAAAA,KAFC,GAEO,CACV;AACEb,YAAAA,MAAM,EAAE;AACNM,cAAAA,MAAM,EAAE;AADF;AADV,WADU,EAMV;AACEN,YAAAA,MAAM,EAAE;AACNM,cAAAA,MAAM,EAAE;AADF;AADV,WANU,CAFP;AAAA,4CAeE;AACLO,YAAAA,KAAK,EAALA,KADK;AAELC,YAAAA,QAAQ,EAAE;AAFL,WAfF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqBP,eAAenB,IAAf","sourcesContent":["import * as React from \"react\";\r\nimport Header from \"../../components/Header\";\r\nimport { withRouter } from \"next/router\";\r\nimport axios from \"axios\";\r\n\r\nclass User extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header />\r\n        this is a user page woohoo\r\n        {props.username} is the user's name\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\nPrerendering static page... We need data to populate the page.\r\nRetrieve user profile data from the api\r\n*/\r\nexport async function getStaticProps({ params }) {\r\n  return new Promise((resolve, reject) => {\r\n    axios({\r\n      method: \"get\",\r\n      url: \"http://localhost:8080/user/\" + params.userid,\r\n    }).then(\r\n      (response) => {\r\n        console.log(response);\r\n        var props = { props: response };\r\n        resolve(props);\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        var props = { props: error };\r\n        resolve(props);\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n  //test example\r\n  var paths = [\r\n    {\r\n      params: {\r\n        userid: \"niwwi\",\r\n      },\r\n    },\r\n    {\r\n      params: {\r\n        userid: \"nlovas\",\r\n      },\r\n    },\r\n  ];\r\n\r\n  return {\r\n    paths,\r\n    fallback: false,\r\n  };\r\n}\r\n\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}